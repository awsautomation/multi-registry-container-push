name: Build and Push Docker Image

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout source code from repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Login to Docker Hub
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Step 3: Build Docker image
      - name: Build Docker image
        run: docker build -t py-app:latest .

      # Step 4: Tag and push to Docker Hub
      - name: Tag and push to Docker Hub
        run: |
          docker tag py-app:latest ${{ secrets.DOCKER_REPOSITORY }}:latest
          docker push ${{ secrets.DOCKER_REPOSITORY }}:latest

      # Step 5: Set AWS region for later ECR steps
      - name: Set AWS Region
        run: echo "AWS_REGION=ap-south-1" >> $GITHUB_ENV

      # Step 6: Login to AWS ECR
      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: ap-south-1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Step 7: Tag and push image to AWS ECR
      - name: Tag and push to ECR
        run: |
          docker tag py-app:latest ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
          docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest

      # Step 8: Login to Azure using Service Principal
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Step 9: Docker login to Azure Container Registry
      - name: Docker login to Azure Container Registry
        run: az acr login --name ${{ secrets.ACR_NAME }}

      # Step 10: Tag and push image to Azure Container Registry (ACR)
      - name: Tag and push to ACR
        run: |
          docker tag py-app:latest ${{ secrets.ACR_NAME }}.azurecr.io/py-app:latest
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/py-app:latest

      # Step 11: Deploy the container image from ACR to Azure App Service
      - name: Deploy to Azure Web App (App Service)
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.APP_SERVICE_NAME }}
          slot-name: production
          images: ${{ secrets.ACR_NAME }}.azurecr.io/py-app:latest
